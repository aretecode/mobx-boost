// const mobx = require('mobx')
// const mst = require('mobx-state-tree')
// const react = require('mobx-react')
// const utils = require('mobx-utils')
// const devtools = require('mobx-react-devtools')
Object.defineProperty(exports, "__esModule", { value: true });
var mobx_utils_1 = require("mobx-utils");
exports.PENDING = mobx_utils_1.PENDING;
exports.FULFILLED = mobx_utils_1.FULFILLED;
exports.REJECTED = mobx_utils_1.REJECTED;
// private
// createIntervalTicker,
// createAnimationFrameTicker,
// StreamListener,
// observableSymbol,
// self,
// caseImpl,
// createObservablePromise,
// ViewModel,
var mobx_utils_2 = require("mobx-utils");
exports.asyncAction = mobx_utils_2.asyncAction;
exports.chunkProcessor = mobx_utils_2.chunkProcessor;
exports.createTransformer = mobx_utils_2.createTransformer;
exports.createViewModel = mobx_utils_2.createViewModel;
exports.expr = mobx_utils_2.expr;
exports.fromPromise = mobx_utils_2.fromPromise;
exports.isPromiseBasedObservable = mobx_utils_2.isPromiseBasedObservable;
exports.fromResource = mobx_utils_2.fromResource;
exports.whenWithTimeout = mobx_utils_2.whenWithTimeout;
exports.keepAlive = mobx_utils_2.keepAlive;
exports.lazyObservable = mobx_utils_2.lazyObservable;
exports.now = mobx_utils_2.now;
exports.toStream = mobx_utils_2.toStream;
exports.fromStream = mobx_utils_2.fromStream;
exports.queueProcessor = mobx_utils_2.queueProcessor;
exports.whenAsync = mobx_utils_2.whenAsync;
// utils
exports.NOOP = mobx_utils_2.NOOP;
exports.IDENTITY = mobx_utils_2.IDENTITY;
exports.invariant = mobx_utils_2.invariant;
exports.deprecated = mobx_utils_2.deprecated;
exports.addHiddenProp = mobx_utils_2.addHiddenProp;
var mobx_1 = require("mobx");
exports.IDerivationState = mobx_1.IDerivationState;
// deprecated from @public
// ObservableMap,
var mobx_2 = require("mobx");
exports.Reaction = mobx_2.Reaction;
exports.untracked = mobx_2.untracked;
exports.createAtom = mobx_2.createAtom;
exports.spy = mobx_2.spy;
exports.comparer = mobx_2.comparer;
exports.isObservableObject = mobx_2.isObservableObject;
exports.isBoxedObservable = mobx_2.isBoxedObservable;
exports.isObservableArray = mobx_2.isObservableArray;
exports.isObservableMap = mobx_2.isObservableMap;
exports.isObservable = mobx_2.isObservable;
exports.isObservableProp = mobx_2.isObservableProp;
exports.isComputed = mobx_2.isComputed;
exports.isComputedProp = mobx_2.isComputedProp;
exports.isAction = mobx_2.isAction;
exports.isArrayLike = mobx_2.isArrayLike;
exports.transaction = mobx_2.transaction;
exports.observable = mobx_2.observable;
exports.computed = mobx_2.computed;
exports.extendObservable = mobx_2.extendObservable;
exports.extendShallowObservable = mobx_2.extendShallowObservable;
exports.observe = mobx_2.observe;
exports.intercept = mobx_2.intercept;
exports.autorun = mobx_2.autorun;
exports.reaction = mobx_2.reaction;
exports.when = mobx_2.when;
exports.action = mobx_2.action;
exports.runInAction = mobx_2.runInAction;
exports.keys = mobx_2.keys;
exports.values = mobx_2.values;
exports.set = mobx_2.set;
exports.remove = mobx_2.remove;
exports.has = mobx_2.has;
exports.get = mobx_2.get;
// !!!
exports.decorate = mobx_2.decorate;
exports.flow = mobx_2.flow;
exports.configure = mobx_2.configure;
exports.onBecomeObserved = mobx_2.onBecomeObserved;
exports.onBecomeUnobserved = mobx_2.onBecomeUnobserved;
exports.toJS = mobx_2.toJS;
exports.trace = mobx_2.trace;
exports.getDependencyTree = mobx_2.getDependencyTree;
exports.getObserverTree = mobx_2.getObserverTree;
exports.getDebugName = mobx_2.getDebugName;
exports.getAtom = mobx_2.getAtom;
exports.onReactionError = mobx_2.onReactionError;
exports._getAdministration = mobx_2._getAdministration;
exports._allowStateChanges = mobx_2._allowStateChanges;
exports._resetGlobalState = mobx_2._resetGlobalState;
exports._getGlobalState = mobx_2._getGlobalState;
exports._isComputingDerivation = mobx_2._isComputingDerivation;
exports._interceptReads = mobx_2._interceptReads;
var mobx_state_tree_1 = require("mobx-state-tree");
exports.typecheck = mobx_state_tree_1.typecheck;
exports.escapeJsonPath = mobx_state_tree_1.escapeJsonPath;
exports.unescapeJsonPath = mobx_state_tree_1.unescapeJsonPath;
exports.joinJsonPath = mobx_state_tree_1.joinJsonPath;
exports.splitJsonPath = mobx_state_tree_1.splitJsonPath;
exports.types = mobx_state_tree_1.types;
// !!!!!
exports.mstDecorate = mobx_state_tree_1.decorate;
exports.mstFlow = mobx_state_tree_1.flow;
// ^^^^^^^^^^^^
exports.addMiddleware = mobx_state_tree_1.addMiddleware;
exports.process = mobx_state_tree_1.process;
exports.isStateTreeNode = mobx_state_tree_1.isStateTreeNode;
exports.applyAction = mobx_state_tree_1.applyAction;
exports.onAction = mobx_state_tree_1.onAction;
exports.recordActions = mobx_state_tree_1.recordActions;
exports.createActionTrackingMiddleware = mobx_state_tree_1.createActionTrackingMiddleware;
var mobx_state_tree_2 = require("mobx-state-tree");
exports.getType = mobx_state_tree_2.getType;
exports.getChildType = mobx_state_tree_2.getChildType;
exports.onPatch = mobx_state_tree_2.onPatch;
exports.onSnapshot = mobx_state_tree_2.onSnapshot;
exports.applyPatch = mobx_state_tree_2.applyPatch;
exports.recordPatches = mobx_state_tree_2.recordPatches;
exports.protect = mobx_state_tree_2.protect;
exports.unprotect = mobx_state_tree_2.unprotect;
exports.isProtected = mobx_state_tree_2.isProtected;
exports.applySnapshot = mobx_state_tree_2.applySnapshot;
exports.hasParent = mobx_state_tree_2.hasParent;
exports.getRoot = mobx_state_tree_2.getRoot;
exports.getPath = mobx_state_tree_2.getPath;
exports.getPathParts = mobx_state_tree_2.getPathParts;
exports.isRoot = mobx_state_tree_2.isRoot;
exports.resolvePath = mobx_state_tree_2.resolvePath;
exports.resolveIdentifier = mobx_state_tree_2.resolveIdentifier;
exports.getIdentifier = mobx_state_tree_2.getIdentifier;
exports.tryResolve = mobx_state_tree_2.tryResolve;
exports.getRelativePath = mobx_state_tree_2.getRelativePath;
exports.clone = mobx_state_tree_2.clone;
exports.detach = mobx_state_tree_2.detach;
exports.destroy = mobx_state_tree_2.destroy;
exports.isAlive = mobx_state_tree_2.isAlive;
exports.addDisposer = mobx_state_tree_2.addDisposer;
exports.getEnv = mobx_state_tree_2.getEnv;
exports.walk = mobx_state_tree_2.walk;
exports.getMembers = mobx_state_tree_2.getMembers;
var mst_middlewares_1 = require("mst-middlewares");
exports.atomic = mst_middlewares_1.atomic;
exports.simpleActionLogger = mst_middlewares_1.simpleActionLogger;
exports.actionLogger = mst_middlewares_1.actionLogger;
exports.TimeTraveller = mst_middlewares_1.TimeTraveller;
exports.UndoManager = mst_middlewares_1.UndoManager;
var mobx_react_1 = require("mobx-react");
exports.observer = mobx_react_1.observer;
exports.Observer = mobx_react_1.Observer;
exports.componentByNodeRegistery = mobx_react_1.componentByNodeRegistery;
exports.useStaticRendering = mobx_react_1.useStaticRendering;
exports.trackComponents = mobx_react_1.trackComponents;
exports.renderReporter = mobx_react_1.renderReporter;
exports.Provider = mobx_react_1.Provider;
exports.inject = mobx_react_1.inject;
exports.propTypes = mobx_react_1.propTypes;
exports.PropTypes = mobx_react_1.PropTypes;
exports.onError = mobx_react_1.onError;
var mobx_react_devtools_1 = require("mobx-react-devtools");
exports.DevTools = mobx_react_devtools_1.default;
exports.GraphControl = mobx_react_devtools_1.GraphControl;
exports.LogControl = mobx_react_devtools_1.LogControl;
exports.UpdatesControl = mobx_react_devtools_1.UpdatesControl;
exports.configureDevtool = mobx_react_devtools_1.configureDevtool;
exports.setUpdatesEnabled = mobx_react_devtools_1.setUpdatesEnabled;
exports.setGraphEnabled = mobx_react_devtools_1.setGraphEnabled;
exports.setLogEnabled = mobx_react_devtools_1.setLogEnabled;
